# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2021-03-25 23:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApproximateDirectoryContentIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexed_elements_count', models.IntegerField(help_text='Number of elements that went into the fingerprint')),
                ('chunk1', models.BinaryField(db_index=True, help_text='Binary form of the first 8 (0-7) hex digits of the fingerprint', max_length=4)),
                ('chunk2', models.BinaryField(db_index=True, help_text='Binary form of the second 8 (8-15) hex digits of the fingerprint', max_length=4)),
                ('chunk3', models.BinaryField(db_index=True, help_text='Binary form of the third 8 (16-23) hex digits of the fingerprint', max_length=4)),
                ('chunk4', models.BinaryField(db_index=True, help_text='Binary form of the fourth 8 (24-32) hex digits of the fingerprint', max_length=4)),
                ('path', models.CharField(help_text='The full path value of this directory', max_length=2000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApproximateDirectoryStructureIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexed_elements_count', models.IntegerField(help_text='Number of elements that went into the fingerprint')),
                ('chunk1', models.BinaryField(db_index=True, help_text='Binary form of the first 8 (0-7) hex digits of the fingerprint', max_length=4)),
                ('chunk2', models.BinaryField(db_index=True, help_text='Binary form of the second 8 (8-15) hex digits of the fingerprint', max_length=4)),
                ('chunk3', models.BinaryField(db_index=True, help_text='Binary form of the third 8 (16-23) hex digits of the fingerprint', max_length=4)),
                ('chunk4', models.BinaryField(db_index=True, help_text='Binary form of the fourth 8 (24-32) hex digits of the fingerprint', max_length=4)),
                ('path', models.CharField(help_text='The full path value of this directory', max_length=2000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExactFileIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha1', models.BinaryField(db_index=True, help_text='Binary form of a SHA1 checksum in lowercase hex for a file', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExactPackageArchiveIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha1', models.BinaryField(db_index=True, help_text='Binary form of a SHA1 checksum in lowercase hex for a file', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexablePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, help_text='The UUID of a Package on an instance of PackageDB', unique=True, verbose_name='UUID')),
                ('last_indexed_date', models.DateTimeField(help_text='Timestamp set to the date of the last indexing.  Used to track indexing status.')),
                ('index_error', models.TextField(blank=True, help_text='Indexing errors messages. When present this means the indexing has failed.', null=True)),
            ],
        ),
        migrations.AddField(
            model_name='exactpackagearchiveindex',
            name='package',
            field=models.ForeignKey(help_text='The Package that this file is from', on_delete=django.db.models.deletion.CASCADE, to='matchcode.IndexablePackage'),
        ),
        migrations.AddField(
            model_name='exactfileindex',
            name='package',
            field=models.ForeignKey(help_text='The Package that this file is from', on_delete=django.db.models.deletion.CASCADE, to='matchcode.IndexablePackage'),
        ),
        migrations.AddField(
            model_name='approximatedirectorystructureindex',
            name='package',
            field=models.ForeignKey(help_text='The Package that this directory is a part of', on_delete=django.db.models.deletion.CASCADE, to='matchcode.IndexablePackage'),
        ),
        migrations.AddField(
            model_name='approximatedirectorycontentindex',
            name='package',
            field=models.ForeignKey(help_text='The Package that this directory is a part of', on_delete=django.db.models.deletion.CASCADE, to='matchcode.IndexablePackage'),
        ),
        migrations.AlterUniqueTogether(
            name='approximatedirectorystructureindex',
            unique_together=set([('chunk1', 'chunk2', 'chunk3', 'chunk4', 'package', 'path')]),
        ),
        migrations.AlterUniqueTogether(
            name='approximatedirectorycontentindex',
            unique_together=set([('chunk1', 'chunk2', 'chunk3', 'chunk4', 'package', 'path')]),
        ),
    ]
